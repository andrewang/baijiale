{"version":3,"sources":["Socket.js"],"names":["WebSocket","window","MozWebSocket","proto","dispatch","data","sz","TYPE","msg","JSON","parse","type","t","session","s","args","d","name","n","response","stringify","hostRequest","req","Socket","cc","Class","extends","Component","properties","callbacks","default","onMessages","status","url","state","get","ws","readState","on","callback","push","emit","arguments","i","length","forEach","item","apply","close","connect","self","binaryType","onopen","onmessage","event","onclose","onerror","err","log","request","console","send","uint8Array","Uint8Array","Utf8ArrayToStr","array","out","len","c","char2","char3","char4","pre","String","fromCharCode","fromCodePoint"],"mappings":"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","file":"Socket.js","sourceRoot":"../../../../../../assets/scripts/net/websocket","sourcesContent":["var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket; \n\nvar proto = {};\nproto.dispatch = function (data, sz) {\n    var TYPE = {\n        \"q\" : \"REQUEST\",\n        \"s\" : \"RESPONSE\",\n    }\n    var msg = data;\n    if (typeof(msg) == \"string\") {\n        msg = JSON.parse(data);\n    }\n    var type = TYPE[msg.t];\n    if (!type) {\n        return \"UNKNOWN\"\n    }\n    if (type == \"RESPONSE\") {\n        return {type : type, session : msg.s, args : msg.d}\n    }\n    var session = msg.s\n    var name = msg.n\n    var args = msg.d\n    if (!session) {\n        return {type : type, name : name, args : args}\n    }\n    var response = function (s) {\n        var msg = {\n            t : \"s\",\n            s : session,\n            d : s,\n        }\n        return JSON.stringify(msg);\n    }\n    //console.log(\"type=\"+type+\"name=\"+name+\"args=\"+args)\n    return {type : type, name : name, args : args, response : response}\n}\n\nproto.hostRequest = function (name, msg, session) {\n    var req = {\n        t : \"q\",\n        s : session,\n        n : name, \n        d : msg,\n    }\n    return JSON.stringify(req);\n}\n\nvar Socket = cc.Class({\n    extends: cc.Component,\n    properties : {\n        session : 1,\n        callbacks : {\n            default : {},\n        },\n        onMessages : [],\n        status : \"\",\n        url : \"\",\n        state : {\n            get : function () {\n                if (this.ws) {\n                    return this.ws.readState;\n                }\n                return \"\";\n            }\n        }\n    },\n\n    on : function (name, callback) {\n        this.onMessages.push({name : name, callback : callback});\n    },\n\n    emit : function () {\n        var name = arguments[0];\n        var args = [];\n        for (var i = 1; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        this.onMessages.forEach(function (item) {\n            if (name != item.name) {\n                return;\n            }\n            item.callback.apply(null, args);\n        });\n    },\n\n    close : function(){\n        if(this.ws){\n            this.ws.close();\n            this.ws = null;\n        }\n        \n    },\n\n    connect : function (url) {\n        var self = this;\n        this.url = url;\n        var ws = new WebSocket(url)\n        ws.binaryType = \"arraybuffer\";\n        ws.onopen = function () {\n            self.emit(\"onopen\");\n        }\n        ws.onmessage = function (event) {\n            self.emit(\"onmessage\", event);\n            var data = event.data;\n            var args = self.dispatch(data, data.length);\n            // console.log(args);\n            var type = args.type;\n            if (type == \"REQUEST\") {\n                self.emit(args.name, args.args);\n            } else if (type == \"RESPONSE\") {\n                var session = args.session;\n                var callback = self.callbacks[session];\n                self.callbacks[session] = null;\n                callback(args.args);\n            }\n        }\n        ws.onclose = function () {\n            self.emit(\"onclose\");\n            this.status = \"close\";\n            this.close();\n        }\n        ws.onerror = function (err) {\n            self.emit(\"onerror\", err);\n            cc.log(\"WebSocket url \" + url + \" err \" + err);\n        }\n        this.ws = ws;\n    },\n\n    request : function (name, msg, callback) {\n        if (name != \"user_ntp_net_time\") {\n            console.log(\"Socket request \" + name + \" msg \" + JSON.stringify(msg))\n        }\n        var session = this.session++;\n        this.callbacks[session] = callback;\n        msg = msg || {};\n        var data = this.hostRequest(name, msg, session);\n        this.ws.send(data);\n    },\n\n    dispatch : function (data, sz) {\n        // var binary = new Uint8Array(data);\n        // var arr = [];\n        // for (var i = 0; i < binary.length; i++) {\n        //     var char = String.fromCharCode(binary[i]);\n        //     arr.push(char);\n        // }\n        // data = arr.join('');\n        //console.log(data);\n         var uint8Array = new Uint8Array(data);\n         var data = this.Utf8ArrayToStr(uint8Array);\n        //var data = new TextDecoder(\"utf-8\").decode(binary);\n        sz = data.length;\n        // console.log(data);\n        // console.log(sz);\n        return proto.dispatch(data, sz);\n    },\n\n    hostRequest : function (name, msg, session) {\n        return proto.hostRequest(name, msg, session);\n    },\n\n    Utf8ArrayToStr : function(array) {\n        var out, i, len, c;\n        var char2, char3,char4;\n\n        out = \"\";\n        len = array.length;\n        i = 0;\n        while(i < len) {\n            c = array[i++];\n        //     switch(c >> 4)\n        //     { \n        //     case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n        // // 0xxxxxxx\n        //         out += String.fromCharCode(c);\n        //         break;\n        //     case 12: case 13:\n        // // 110x xxxx   10xx xxxx\n        //         char2 = array[i++];\n        //         out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n        //         break;\n        //     case 14:\n        //     // 1110 xxxx  10xx xxxx  10xx xxxx\n        //         char2 = array[i++];\n        //         char3 = array[i++];\n        //         out += String.fromCharCode(((c & 0x0F) << 12) |\n        //                ((char2 & 0x3F) << 6) |\n        //                ((char3 & 0x3F) << 0));\n        //     break;\n        //     }\n            var pre = (c >> 3);\n            if(pre >=0 && pre <= 15){// 0xxxxxxx\n                out += String.fromCharCode(c);\n            }else if(pre >=24 && pre <= 27){// 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n            }else if(pre >= 28 && pre <= 29){// 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                       ((char2 & 0x3F) << 6) |\n                       ((char3 & 0x3F) << 0));\n            }else if(pre == 30){//1111 0xxx  10xx xxxx  10xx xxxx 10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                char4 = array[i++];\n                out += String.fromCodePoint(\n                        ((c & 0x07) << 15) |\n                       ((char2 & 0x3F) << 12) |\n                       ((char3 & 0x3F) << 6) |\n                       ((char4 & 0x3F) << 0));              \n            }\n        }\n\n    return out;\n    },\n})  "]}