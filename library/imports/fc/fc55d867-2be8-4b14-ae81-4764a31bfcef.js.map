{"version":3,"sources":["../../../../../../assets/scripts/app/game/assets/scripts/app/game/FlipBtn.js"],"names":["BaseObj","require","stateEnmu","cc","Class","extends","properties","onLoad","pb_timer","find","pb","getComponent","ProgressBar","hideTimer","timeInterval","detalTime","progress","director","getScheduler","unschedule","tmpInterval","leftTime","totalTime","launchTimer","node","active","schedule"],"mappings":";;;;;;AAAA;AACA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,YAAYD,QAAQ,YAAR,EAAsBC,SAAtC;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASL,OADJ;;AAGLM,gBAAY,EAHP;;AAOLC,YAAQ,kBAAY;AAChB,aAAKC,QAAL,GAAgB,KAAKC,IAAL,CAAU,UAAV,CAAhB;AACA,aAAKC,EAAL,GAAU,KAAKF,QAAL,CAAcG,YAAd,CAA2BR,GAAGS,WAA9B,CAAV;AACA,aAAKC,SAAL;AACH,KAXI;;AAaLC,kBAAc,sBAAUC,SAAV,EAAqB;AAC/B;AACA,YAAI,CAAC,KAAKL,EAAN,IAAY,KAAKA,EAAL,CAAQM,QAAR,IAAoB,CAApC,EAAuC;AACnCb,eAAGc,QAAH,CAAYC,YAAZ,GAA2BC,UAA3B,CAAsC,KAAKC,WAA3C,EAAwD;AACxD;AACA;AAFA,cAGA,KAAKA,WAAL,GAAmB,IAAnB;AACA,iBAAKP,SAAL;AACA;AACH;AACD,aAAKQ,QAAL,GAAgB,KAAKA,QAAL,GAAgBN,SAAhC;AACA,aAAKL,EAAL,CAAQM,QAAR,GAAmB,KAAKK,QAAL,GAAgB,KAAKC,SAAxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACH,KAnCI;;AAqCLC,iBAAa,qBAAUF,QAAV,EAAoBC,SAApB,EAA+B;AACxC,YAAI,CAAC,KAAKd,QAAV,EAAoB;AAChB;AACH;AACD,aAAKgB,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA;AACA,aAAKJ,QAAL,GAAgBA,QAAhB;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKZ,EAAL,CAAQM,QAAR,GAAmBK,WAAWC,SAA9B;AACA;AACA,YAAI,KAAKF,WAAT,EAAsB;AAClBjB,eAAGc,QAAH,CAAYC,YAAZ,GAA2BC,UAA3B,CAAsC,KAAKC,WAA3C,EAAwD;AACxD;AACA;AAFA;AAGH;AACD,aAAKA,WAAL,GAAmB,KAAKN,YAAxB;AACAX,WAAGc,QAAH,CAAYC,YAAZ,GAA2BQ,QAA3B,CAAoC,KAAKN,WAAzC,EAAsD,IAAtD,EAA4D,CAA5D;AACH,KAtDI;;AAwDLP,eAAW,qBAAY;AACnB;AACA,aAAKW,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;AA3DI,CAAT","file":"FlipBtn.js","sourceRoot":"../../../../../../assets/scripts/app/game","sourcesContent":["//挤牌权转移的对象\nvar BaseObj = require(\"BaseObj\")\nvar stateEnmu = require(\"GameConfig\").stateEnmu\ncc.Class({\n    extends: BaseObj,\n\n    properties: {\n\n    },\n\n    onLoad: function () {\n        this.pb_timer = this.find(\"pb_timer\")\n        this.pb = this.pb_timer.getComponent(cc.ProgressBar)\n        this.hideTimer()\n    },\n\n    timeInterval: function (detalTime) {\n        //傻逼creator模拟器不知道为什么退出房间的时候说this.pb为空，所以处理了一下\n        if (!this.pb || this.pb.progress <= 0) {\n            cc.director.getScheduler().unschedule(this.tmpInterval, this)\n            // cc.musicMgr.stop(this.timerAudioId)\n            // this.timerAudioId = null\n            this.tmpInterval = null\n            this.hideTimer()\n            return\n        }\n        this.leftTime = this.leftTime - detalTime\n        this.pb.progress = this.leftTime / this.totalTime\n\n        // var isBetState = function () {\n        //     var state = gUserData.roomInfo.game_status\n        //     return stateEnmu.BETTING == state || stateEnmu.BETTING_DELAY == state\n        // }.bind(this)\n\n        // //下注阶段最后5秒才需要播放滴滴滴的音效\n        // if (this.leftTime <= 5.0 && !this.timerAudioId && isBetState()) {\n        //     this.timerAudioId = cc.musicMgr.playEffect(\"daojishi.mp3\", true)\n        // }\n    },\n\n    launchTimer: function (leftTime, totalTime) {\n        if (!this.pb_timer) {\n            return\n        }\n        this.node.active = true\n        // this.pb_timer.active = true\n        this.leftTime = leftTime\n        this.totalTime = totalTime\n        this.pb.progress = leftTime / totalTime\n        //模拟器或真机上，如果不判断句柄是否在调度，会报错，所以需要判断一下\n        if (this.tmpInterval) {\n            cc.director.getScheduler().unschedule(this.tmpInterval, this)\n            // cc.musicMgr.stop(this.timerAudioId)\n            // this.timerAudioId = null\n        }\n        this.tmpInterval = this.timeInterval\n        cc.director.getScheduler().schedule(this.tmpInterval, this, 0)\n    },\n\n    hideTimer: function () {\n        // this.pb_timer.active = false\n        this.node.active = false\n    },\n});\n"]}